# Application Info
spring.application.name=smart-supply-chain-backend
info.app.name=Smart Supply Chain Risk Intelligence
info.app.description=Enterprise-grade supply chain risk management platform
info.app.version=2.0.0

# Firebase Configuration
firebase.config.path=firebase-service-account-test.json
firebase.enabled=false

# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/smart_supply_chain
spring.datasource.username=postgres
spring.datasource.password=Shobharain11@
spring.datasource.driver-class-name=org.postgresql.Driver

# Hikari Connection Pool Configuration
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.leak-detection-threshold=60000

# JPA Configuration with Performance Optimization
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.generate_statistics=false

# Hibernate Cache Configuration (Disabled for now)
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false

# Redis Configuration (Optional - will fallback to in-memory if not available)
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.timeout=2000ms
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0
redis.enabled=false

# Caching Configuration
spring.cache.type=simple
spring.cache.redis.cache-null-values=false
spring.cache.redis.time-to-live=300000

# Rate Limiting Configuration
rate.limit.default.capacity=100
rate.limit.default.refill.tokens=10
rate.limit.auth.capacity=5
rate.limit.auth.refill.tokens=1
rate.limit.critical.capacity=2
rate.limit.critical.refill.tokens=1

# Server Configuration
server.port=8080
server.tomcat.threads.max=200
server.tomcat.accept-count=100
server.tomcat.max-connections=10000

# Security Configuration
cors.allowed.origins=http://localhost:3000,http://localhost:3001
spring.security.require-ssl=false

# Logging Configuration
logging.level.com.supplychainrisk=INFO
logging.level.org.springframework.security=INFO
logging.level.org.hibernate=WARN

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
