spring:
  application:
    name: smart-supply-chain-backend
  
  profiles:
    active: dev
  
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
  
  h2:
    console:
      enabled: true
      path: /h2-console
  
  security:
    user:
      name: admin
      password: admin

server:
  port: 8080
  servlet:
    context-path: /api

# Firebase Configuration
firebase:
  service-account-key-path: classpath:service-account-key.json
  project-id: ${FIREBASE_PROJECT_ID:smart-supply-chain-dev}

# CORS Configuration
cors:
  allowed-origins: 
    - http://localhost:3000
    - http://localhost:3001
    - https://smart-supply-chain.netlify.app
  allowed-methods: 
    - GET
    - POST
    - PUT
    - DELETE
    - OPTIONS
  allowed-headers: 
    - "*"
  allow-credentials: true

# Logging Configuration
logging:
  level:
    com.supplychain.risk: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Management endpoints for monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  endpoint:
    health:
      show-details: always

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev
  
  datasource:
    url: jdbc:h2:mem:devdb
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true

logging:
  level:
    com.supplychain.risk: DEBUG

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod
  
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/supply_chain_risk}
    driver-class-name: org.postgresql.Driver
    username: ${DATABASE_USERNAME:supply_chain_user}
    password: ${DATABASE_PASSWORD:changeme}
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

logging:
  level:
    com.supplychain.risk: INFO
    org.springframework.security: WARN
  file:
    name: logs/supply-chain-backend.log

server:
  port: ${SERVER_PORT:8080}